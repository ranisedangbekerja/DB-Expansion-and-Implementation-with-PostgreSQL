-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Publisher"
(
    "PublisherID " "char" NOT NULL,
    "PublisherName" "char" NOT NULL,
    "City" "char",
    "Country" "char",
    "Telephone" "char",
    "YearFounded" integer,
    PRIMARY KEY ("PublisherID ")
);

COMMENT ON TABLE public."Publisher"
    IS 'Contain about book publishers';

CREATE TABLE IF NOT EXISTS public."Book"
(
    "BookID" "char" NOT NULL,
    "BookNumber" "char",
    "BookName" "char" NOT NULL,
    "PublicationYear " integer,
    "Pages" integer,
    "PublisherID " "char" NOT NULL,
    PRIMARY KEY ("BookID")
);

CREATE TABLE IF NOT EXISTS public."Author"
(
    "AuthorID" "char" NOT NULL,
    "AuthorName" "char" NOT NULL,
    "YearBorn" integer,
    "YearDied" integer,
    PRIMARY KEY ("AuthorID")
);

CREATE TABLE IF NOT EXISTS public."Book_Author"
(
    "Book_BookID" "char" NOT NULL,
    "Author_AuthorID" "char" NOT NULL
);

CREATE TABLE IF NOT EXISTS public."UserAccount"
(
    "UserID" "char" NOT NULL,
    "Username" "char" NOT NULL,
    "Password" "char" NOT NULL,
    "Email" "char" NOT NULL,
    "DateCreated" date NOT NULL,
    PRIMARY KEY ("UserID")
);

CREATE TABLE IF NOT EXISTS public."Wishlist"
(
    "WishlistID" "char" NOT NULL,
    "UserID" "char" NOT NULL,
    "BookID" "char" NOT NULL,
    PRIMARY KEY ("WishlistID")
);

CREATE TABLE IF NOT EXISTS public."Review"
(
    "ReviewID" "char" NOT NULL,
    "UserID" "char" NOT NULL,
    "BookID" "char" NOT NULL,
    "Rating" integer NOT NULL,
    "Comment" text,
    "Date" date NOT NULL,
    PRIMARY KEY ("ReviewID")
);

CREATE TABLE IF NOT EXISTS public."StoreLocation"
(
    "StoreID" "char" NOT NULL,
    "StoreName" "char" NOT NULL,
    "Address" "char" NOT NULL,
    "City" "char" NOT NULL,
    "Coutry" "char" NOT NULL,
    "PhoneNumber" integer NOT NULL,
    PRIMARY KEY ("StoreID")
);

CREATE TABLE IF NOT EXISTS public."StoreLocation_Book"
(
    "StoreLocation_StoreID" "char" NOT NULL,
    "Book_BookID" "char" NOT NULL
);

CREATE TABLE IF NOT EXISTS public."ContactPerson"
(
    "StaffID" "char" NOT NULL,
    "StaffName" "char" NOT NULL,
    "Phone" integer NOT NULL,
    "StoreID" "char" NOT NULL,
    PRIMARY KEY ("StaffID")
);

CREATE TABLE IF NOT EXISTS public."Category"
(
    "CategoryID" "char" NOT NULL,
    "CategoryName" "char" NOT NULL,
    "BookID" "char" NOT NULL,
    PRIMARY KEY ("CategoryID")
);

CREATE TABLE IF NOT EXISTS public."Genre"
(
    "GenreID" "char" NOT NULL,
    "GenreName" "char" NOT NULL,
    "BookID" "char" NOT NULL,
    PRIMARY KEY ("GenreID")
);

CREATE TABLE IF NOT EXISTS public."Inventory"
(
    "InventoryID" "char" NOT NULL,
    "StoreID" "char" NOT NULL,
    "BookID" "char" NOT NULL,
    "Quantity" integer NOT NULL,
    PRIMARY KEY ("InventoryID")
);

CREATE TABLE IF NOT EXISTS public."Supplier"
(
    "SupplierID" "char" NOT NULL,
    "SupplierName" "char" NOT NULL,
    PRIMARY KEY ("SupplierID")
);

CREATE TABLE IF NOT EXISTS public."Supplier_StoreLocation"
(
    "Supplier_SupplierID" "char" NOT NULL,
    "StoreLocation_StoreID" "char" NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Language"
(
    "LanguageID" "char" NOT NULL,
    "LanguageName" "char" NOT NULL,
    PRIMARY KEY ("LanguageID")
);

CREATE TABLE IF NOT EXISTS public."Language_Book"
(
    "Language_LanguageID" "char" NOT NULL,
    "Book_BookID" "char" NOT NULL
);

CREATE TABLE IF NOT EXISTS public."BookRetailPrice"
(
    "PriceID" "char" NOT NULL,
    "PriceTag" "char" NOT NULL,
    "BookID" "char" NOT NULL,
    PRIMARY KEY ("PriceID")
);

CREATE TABLE IF NOT EXISTS public."StoreExhibition"
(
    "ExhibitionID" "char" NOT NULL,
    "ExhibitionName" "char" NOT NULL,
    "StoreID" "char" NOT NULL,
    PRIMARY KEY ("ExhibitionID")
);

ALTER TABLE IF EXISTS public."Book"
    ADD FOREIGN KEY ("PublisherID ")
    REFERENCES public."Publisher" ("PublisherID ") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Book_Author"
    ADD FOREIGN KEY ("Book_BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Book_Author"
    ADD FOREIGN KEY ("Author_AuthorID")
    REFERENCES public."Author" ("AuthorID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Wishlist"
    ADD FOREIGN KEY ("BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Wishlist"
    ADD FOREIGN KEY ("UserID")
    REFERENCES public."UserAccount" ("UserID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Review"
    ADD FOREIGN KEY ("UserID")
    REFERENCES public."UserAccount" ("UserID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Review"
    ADD FOREIGN KEY ("BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."StoreLocation_Book"
    ADD FOREIGN KEY ("StoreLocation_StoreID")
    REFERENCES public."StoreLocation" ("StoreID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."StoreLocation_Book"
    ADD FOREIGN KEY ("Book_BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ContactPerson"
    ADD FOREIGN KEY ("StaffID")
    REFERENCES public."StoreLocation" ("StoreID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Category"
    ADD FOREIGN KEY ("BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Genre"
    ADD FOREIGN KEY ("BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Inventory"
    ADD FOREIGN KEY ("StoreID")
    REFERENCES public."StoreLocation" ("StoreID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Inventory"
    ADD FOREIGN KEY ("BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Supplier_StoreLocation"
    ADD FOREIGN KEY ("Supplier_SupplierID")
    REFERENCES public."Supplier" ("SupplierID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Supplier_StoreLocation"
    ADD FOREIGN KEY ("StoreLocation_StoreID")
    REFERENCES public."StoreLocation" ("StoreID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Language_Book"
    ADD FOREIGN KEY ("Language_LanguageID")
    REFERENCES public."Language" ("LanguageID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Language_Book"
    ADD FOREIGN KEY ("Book_BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."BookRetailPrice"
    ADD FOREIGN KEY ("BookID")
    REFERENCES public."Book" ("BookID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."StoreExhibition"
    ADD FOREIGN KEY ("StoreID")
    REFERENCES public."StoreLocation" ("StoreID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;